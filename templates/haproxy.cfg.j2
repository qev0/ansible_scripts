global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot {{ haproxy_chroot }}
        stats socket {{ haproxy_socket }} mode 660 level admin
        # stats timeout 30s
        user {{ haproxy_user }}
        group {{ haproxy_group }}
        daemon

# SSL Config
############
tune.ssl.default-dh-param 2048
ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
ssl-default-bind-options no-sslv3 no-tls-tickets
ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
ssl-default-server-options no-sslv3 no-tls-tickets

# Defaults
##########
defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 100
        timeout client  1m
        timeout server  1m
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

# Auth config
#############
userlist UsersAuth
        user {{ haproxy_auth_user }} password {{ haproxy_auth_pwd }}

# Frontend
###########

frontend {{ haproxy_frontend_name }}
        mode http
{% if 'haproxy_ssl_cert' is not none %}
        redirect scheme https code 301 if !{ ssl_fc }
        bind *:{{ haproxy_https_port }} ssl crt {{ haproxy_ssl_cert }}
{% endif %}
        bind *:{{ haproxy_http_port }}
        http-response set-header Strict-Transport-Security max-age=15768000
        http-request set-header X-Forwarded-Host %[req.hdr(Host)]

        # ACLs
{% for acl in haproxy_acls %}
        acl {{ acl.name }} hdr(host) -i {{ acl.name }}.{{ haproxy_fqdn }}
        use_backend {{ acl.name }} if {{ acl.name }}

{% endfor %}
        # default_backend 


# Backends
##########
{% for acl in haproxy_acls %}
backend {{ acl.name }}
        balance roundrobin
        mode http
        #cookie SERVERID insert indirect nocache
        #option httpchk GET /health/check
        option http-server-close
        option forwardfor
{% if acl.auth %}
        acl AuthOkay_Admin http_auth(UsersAuth)
        http-request auth realm Admin if !AuthOkay_Admin
{% endif %}
{% set i = 0 %}
{% for server in acl.servers %}
{% if acl.ssl %}
        server {{ acl.name }}{{ i + 1 }} {{ server }} check ssl check-ssl verify none
{% else %}
        server {{ acl.name }}{{ i + 1 }} {{ server }} check inter 1s
{% endif %}
{% endfor %}

{% endfor %}