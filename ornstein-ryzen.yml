--- # Ornstein Ryzen VM host Ansible playbook
- hosts: all
  gather_facts: no
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: install python2.7
      raw: test -e /usr/bin/python || (apt update -y && apt install -y python2.7)

      # ansible-galaxy install dj-wasabi.telegraf

# - hosts: all
#   become: True
#   become_method: sudo
#   #vars:
#   #  cifs_share: //diskstation/VMs    # Change to your NFS share
#   #  cifs_username: your-nfs-username # Change to your NFS username
#   #  cifs_password: your-nfs-password # Change to your NFS password
#   #  media_mount: /media/VMs
#   #  kernel_version:
#   #    number: "4.10.12"
#   #    number_stripped: "041012"
#   #    timestamp: "201704210512"
#   roles:
#     - { role: ansible-role-common }
#   tasks:
#     - name: install packages
#       apt:
#         name: "{{ item }}"
#         state: installed
#       with_items:
#         - cifs-utils
#         - qemu-kvm
#         - libvirt-bin
#         - ubuntu-vm-builder
#         - bridge-utils
  
#    - name: install kimchi and dependencies
#       apt:
#         deb: "{{ item }}"
#       with_items:
#         - http://kimchi-project.github.io/wok/downloads/latest/wok.noarch.deb
#         - http://kimchi-project.github.io/gingerbase/downloads/latest/ginger-base.noarch.deb
#         - http://kimchi-project.github.io/kimchi/downloads/latest/kimchi.noarch.deb
#       notify: restart wok

#     - name: set wok timeout
#       lineinfile:
#         path: /etc/wok/wok.conf
#         line: "session_timeout = {{ 60 * 24 * 7 }}"
#         regexp: "session_timeout = "
#         state: present
#       notify: restart wok
#   handlers:
#     - name: restart wok
#       service:
#         name: wokd
#         state: restarted
